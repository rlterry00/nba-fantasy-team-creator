// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "marginLeft": 5,
      "marginRight": 5,
      "paddingTop": 60,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 30,
          }
        }
      >
        NBA Fantasy Team Creator
      </Text>
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 25,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 10,
          }
        }
      >
        Create Team:
      </Text>
      <View
        style={
          Object {
            "backgroundColor": "gainsboro",
            "borderRadius": 15,
            "margin": 10,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "black",
                  },
                ]
              }
            >
              Add Team Name and City
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "gainsboro",
            "borderRadius": 15,
            "margin": 10,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "black",
                  },
                ]
              }
            >
              Select Players
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 25,
              "marginLeft": 5,
              "marginRight": 5,
              "marginTop": 10,
            }
          }
        >
          
        </Text>
        <Text
          style={
            Object {
              "fontSize": 25,
              "marginLeft": 5,
              "marginRight": 5,
              "marginTop": 10,
            }
          }
        >
          
        </Text>
      </View>
      <Text
        style={
          Object {
            "fontSize": 25,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 10,
          }
        }
      >
        Roster:
      </Text>
    </View>
    <RCTScrollView
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      viewabilityConfigCallbackPairs={Array []}
    >
      <View />
    </RCTScrollView>
  </View>
  <View>
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    >
      <View
        style={
          Object {
            "flex": 1,
            "marginLeft": 5,
            "marginRight": 5,
            "paddingTop": 60,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 25,
                "marginLeft": 5,
                "marginRight": 5,
                "marginTop": 10,
              }
            }
          >
            Player List
          </Text>
        </View>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "blue",
                "fontSize": 15,
              }
            }
          >
            Exit
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 25,
                "marginLeft": 5,
                "marginRight": 5,
                "marginTop": 10,
              }
            }
          >
            Filter By Position:
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "blue",
                  "fontSize": 15,
                  "marginRight": 5,
                }
              }
            >
              Forward
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "blue",
                  "fontSize": 15,
                  "marginRight": 5,
                }
              }
            >
              Forward-Center
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "blue",
                  "fontSize": 15,
                  "marginRight": 5,
                }
              }
            >
              Center
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "blue",
                  "fontSize": 15,
                  "marginRight": 5,
                }
              }
            >
              Guard
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "blue",
                "fontSize": 15,
                "marginRight": 5,
              }
            }
          >
            Reset
          </Text>
        </View>
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </Modal>
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    >
      <View
        style={
          Object {
            "flex": 1,
            "marginLeft": 5,
            "marginRight": 5,
            "paddingTop": 60,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 25,
                "marginLeft": 5,
                "marginRight": 5,
                "marginTop": 10,
              }
            }
          >
            Team Set Up
          </Text>
        </View>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "blue",
                "fontSize": 15,
              }
            }
          >
            Exit
          </Text>
        </View>
        <Text
          style={
            Object {
              "fontSize": 25,
              "marginLeft": 5,
              "marginRight": 5,
              "marginTop": 10,
            }
          }
        >
          Team City: 
          
        </Text>
        <Text
          style={
            Object {
              "fontSize": 25,
              "marginLeft": 5,
              "marginRight": 5,
              "marginTop": 10,
            }
          }
        >
          Team Name: 
          
        </Text>
        <TextInput
          autoCapitalize="words"
          onChangeText={[Function]}
          placeholder="Type in city name"
          style={
            Object {
              "borderBottomWidth": 1,
              "height": 40,
              "margin": 10,
            }
          }
        />
        <TextInput
          autoCapitalize="words"
          onChangeText={[Function]}
          placeholder="Type in team name"
          style={
            Object {
              "borderBottomWidth": 1,
              "height": 40,
              "margin": 10,
            }
          }
        />
        <View
          style={
            Object {
              "backgroundColor": "gainsboro",
              "borderRadius": 15,
              "margin": 10,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "black",
                    },
                  ]
                }
              >
                Submit
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</RCTSafeAreaView>
`;
